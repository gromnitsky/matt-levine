#!/usr/bin/env -S make -f

f := mobi
to :=
rss := https://www.bloomberg.com/opinion/authors/ARbTQlRLRjE/matthew-s-levine.rss
src := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))

all:
include .articles.mk

all: $(patsubst %.xhtml, %.$(f), $(xhtml))
all: $(if $(to), $(patsubst %.xhtml, %.send, $(xhtml)))

.articles.mk: rss.xml; ruby $(src)/articles.rb < $< > $@
rss.xml:; curl -sfL '$(rss)' > $@

%.send: %.$(f); $(send)

%.epub: %.xhtml
	erb xml=$< $(src)/epub/nav.xhtml.erb > $(dir $@)/nav.xhtml
	erb xml=$< $(src)/epub/content.opf.erb > $(dir $@)/content.opf
	rm -f $@
	zip -X0 -jq $@ $(src)/epub/mimetype
	cp -r $(src)/epub/META-INF $(dir $@)
	cd $(dir $@) && zip -rq $(notdir $@) META-INF nav.xhtml content.opf $(notdir $<)
	cd $(dir $@) && nokogiri -e 'puts $$_.css("img").map{|i| i["src"]}' $(notdir $<) | xargs -r zip -jq $(notdir $@)

%.mobi: %.xhtml; ebook-convert $< $@ --level1-toc //h:h2 > /dev/null

%.json: %.raw
	ruby $(src)/raw2json.rb $< > $@

%.xhtml: %.json
	ruby $(src)/json2html.rb $< > $@
	ruby $(src)/images.rb $@ > $*.mk
	$(MAKE) --no-print-directory -f $*.mk

define help :=
To check for new articles, rm rss.xml

f=$(f)
    output format: mobi, epub
to=$(to)
    your Kindle address, if empty nothing gets send
catchup=1
    record sending operations w/o sending anything
endef

help:; $(info $(help))@:
clean:; find . -type f | grep -v '\.raw$$' | xargs -r rm

.DELETE_ON_ERROR:
mkdir = @mkdir -p $(dir $@)
define send
$(if $(catchup),,$(if $(to),echo hello | mailx -a $< -- $(to),$(error no to=)))
touch $@
endef
