#!/usr/bin/env node

let puppeteer = require('puppeteer')
let fs = require('fs')

async function download(url, cookies) {
    let browser = await puppeteer.launch()
    let page = await browser.newPage()

    await page.emulateMediaType('screen')
    await page.setUserAgent('Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36')

    await page.setRequestInterception(true)
    page.on('request', req => {
        let headers = Object.assign({}, req.headers())
        if (cookies) headers.cookie = cookies

        // ignore all except html
        if (req.resourceType() === 'document') {
            log(headers)
            req.continue({headers})
        } else {
            req.abort()
        }
    })

    try {
        await page.goto(url, { waitUntil: 'networkidle2' })
        console.log(await page.content())
    } catch(e) {
        err('Error:', e.message)
    }
    await browser.close()
}

function err(...msg) { console.error(...msg); process.exit(1) }

function log(...msg) {
    if (process.env.DEBUG) console.error('puppeteer-fetch-html:', ...msg)
}

function extract_cookies(file) {
    return fs.readFileSync(file).toString().split("\n")
        .find( v => v.includes('"cookie":')).split('"')
        .find( v => v.includes('='))
}

let url = process.argv[2]
if (!url) err('Usage: puppeteer-fetch-html url')

let cookies
try {
    cookies = extract_cookies('fetch.txt')
} catch (_) { /* */ }

download(url, cookies)
